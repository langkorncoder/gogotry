tra_meta <- function(input, cols_group = NULL, index_output = "metadata/group_indices_df.csv", vars_output = "metadata/group_vars_df", firstrows_output = "metadata/first_rows_df.csv", to_csv = FALSE)
{
data_tibble <- tibble::as_tibble(input)
if(is.null(cols_group){stop("Error :// Set cols_group to determine the columns that shall be grouped.")}
devtools:::run_examples()
# install.packages("devtools")
devtools::install_github("gadenbuie/rsthemes")
rsthemes::install_rsthemes()
# list installed themes
rsthemes::list_rsthemes()
# Try all themes
rsthemes::try_rsthemes()
n
# Try all themes
rsthemes::try_rsthemes()
devtools::load_all(".")
if(to_csv == TRUE) {
# Write the data frames to CSV files
readr::write_csv(group_indices_df, index_output)
readr::write_csv(group_vars_df, vars_output)
readr::write_csv(first_rows_df, firstrows_output)
}
devtools::load_all(".")
devtools::load_all(".")
devtools:::run_examples()
devtools:::document()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
knitr::opts_chunk$set(echo = TRUE)
getwd()
# Function to read and clean data from a CSV file
read_and_clean_data <- function(file_path, seperate = ";", decim = ",", tibble = TRUE) {
# Read the CSV file with specified separator and decimal point
data <- readr::read_csv(file_path, sep = ";", dec =",")
# Clean the column names using the clean_names() function from the janitor package
cleaned_data <- data %>%
janitor::clean_names() %>%
janitor::remove_empty() %>%
janitor::remove_constant()
if (tibble == TRUE) {
cleaned_data <- tibble::as.tibble(cleaned_data)
}
# Return the cleaned data
cleaned_data
}
devtools::load_all(".")
rm(read_and_clean_data)
devtools::load_all(".")
devtools::load_all(".")
read_and_clean_data <- function(file_path, separate = ";", decim = ",", tibble = TRUE) {
# Read the CSV file with specified separator and decimal point
data <- readr::read.csv(file_path,sep= seperate, dec = decim)
#Clean the column names using the clean_names() function from the janitor package
cleaned_data <- data %>%
janitor::clean_names() %>%
janitor::remove_empty() %>%
janitor::remove_constant()
if (tibble) {
cleaned_data <- tibble::as_tibble(cleaned_data)
}
# Return the cleaned data
cleaned_data
}
rm(read_and_clean_data)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
dplyr::glimpse(means_data)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
